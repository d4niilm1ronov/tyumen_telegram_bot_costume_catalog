from aiogram import Dispatcher
from aiogram.utils.exceptions import WrongFileIdentifier

from loader import dp, bot
import loader
import json
import sqlite_utils
from func_utils import get_current_time
from aiogram.types import *
from aiogram.types import InlineKeyboardButton as IKButton
from aiogram.types import InlineKeyboardMarkup as IKMarkup
import aiogram

dict_create_costume = {}
dict_show_costume_mediagroup: dict = {}

# {    (id_user)
#      87102936: {
#          "id_collection": INT,
#          "name": STRING,
#          "description": STRING,
#          "arr_photo": [
#                (int)     (int)
#              (ID_PHOTO, ID_MESSAGE)
#          ]
#          "favorit_photo": (ID_PHOTO, ID_MESSAGE)
#      }
# }


# ======================================================================================================================

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Å—Ç—é–º–∞
@dp.callback_query_handler(lambda c: c.data.startswith("show_costume_id"))
async def show_costume(cbq: CallbackQuery, all_photo=False):
    try:
        id_costume = int(cbq.data.split("show_costume_id")[1])
        costume = sqlite_utils.get_costume(id_costume)

        # –µ—Å–ª–∏ –∫–æ—Å—Ç—é–º–∞ –Ω–µ—Ç—É –≤ –±–¥...
        if costume is None:
            if sqlite_utils.its_moder(cbq.from_user.id):
                await cbq.answer(f"‚ÅâÔ∏è –û—à–∏–±–∫–∞. –ö–æ—Å—Ç—é–º–∞ (id{id_costume}) –±–æ–ª—å—à–µ –Ω–µ—Ç—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö", show_alert=True)
            else:
                await cbq.answer("üòì –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫–æ—Å—Ç—é–º –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞", show_alert=True)
            return
        msg = Message()

        # –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
        arr_idphoto = json.loads(costume[4])
        if len(arr_idphoto):
            if all_photo:
                album = MediaGroup()
                for idphoto in arr_idphoto:
                    album.attach_photo(photo=idphoto)
                msg = await cbq.message.answer_media_group(media=album)
                dict_show_costume_mediagroup[cbq.from_user.id] = [img.message_id for img in msg]
            else:
                msg = await cbq.message.answer_photo(photo=arr_idphoto[0])
                dict_show_costume_mediagroup[cbq.from_user.id] = [msg.message_id]

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫
        kb = InlineKeyboardMarkup()
        kb.add(InlineKeyboardButton("–ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞—Ç—å üëã", url=sqlite_utils.get_contact_manager()))
        if len(arr_idphoto) > 1 and all_photo is False:
            kb.add(InlineKeyboardButton("–í—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ üì∏", callback_data=f"show_costume_photo_id{id_costume}"))
        kb.add(InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è ‚¨ÖÔ∏è", callback_data=f"show_collection_id{int(costume[1])}"))
        text = f"<b>{costume[2]}</b>\n\n{costume[3]}"

        # ------------------------------------------------------------------------------------------------------------------

        # –ï—Å–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä –æ—Ç–∫—Ä–æ–µ—Ç –∫–æ—Å—Ç—é–º
        if sqlite_utils.its_moder(cbq.from_user.id):
            text_ikb_photo = "–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ" if len(arr_idphoto) else "–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ"
            data_ikb_photo = f"photo_ID{id_costume}"
            kb.add(IKButton(text="üîΩ –ü–ê–ù–ï–õ–¨ –£–ü–†–ê–í–õ–ï–ù–ò–Ø üîΩ", callback_data=f"null"))
            kb.add(IKButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", callback_data=f"costume_edit_name_ID{id_costume}"))
            kb.add(IKButton(text=text_ikb_photo, callback_data=f"costume_edit_{data_ikb_photo}"))
            kb.add(IKButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"costume_edit_description_ID{id_costume}"))
            kb.add(IKButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é", callback_data=f"costume_edit_category_ID{id_costume}"))
            kb.add(IKButton(text="–£–¥–∞–ª–∏—Ç—å –∫–æ—Å—Ç—é–º", callback_data=f"del_costumeID{id_costume}"))
            kb.add(IKButton(text="–ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"costume_edit_input_collection_id0_ID{id_costume}"))
            text += "\n\n<b>‚öôÔ∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>\n"
            text += f'<a href="https://t.me/zhekahelp_bot?start=costume{id_costume}">–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ—Å—Ç—é–º –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞</a>\n'
            text += f"costume_id: <code>{id_costume}</code>"

        # ------------------------------------------------------------------------------------------------------------------

        # –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è

        await cbq.message.answer(text=text, reply_markup=kb)
        await cbq.message.delete()
        if all_photo:
            str_arr_id_photo = ""
            for photo in msg:
                str_arr_id_photo += str(photo.message_id) + '_'
            str_arr_id_photo = str_arr_id_photo[:-1]
            sqlite_utils.set_state(cbq.from_user.id, f"costume_id{id_costume}_arrIdMsg{str_arr_id_photo}")
        else:
            sqlite_utils.set_state(cbq.from_user.id, f"costume_id{id_costume}_idMSG{msg.message_id}")
    except WrongFileIdentifier as ex:
        print(get_current_time(), "[–û–®–ò–ë–ö–ê] {show_costume} (WrongFileIdentifier)", ex.args)
        admin_id = sqlite_utils.get_one("config", "value", "name='admin_id'")[0]
        dp.bot.send_message(admin_id, "–û—à–∏–±–∫–∞, —Å–æ–æ–±—â–∏—Ç–µ —Å–∏—Å—Ç–µ–º–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: WrongFileIdentifier. –ù–∏–∂–µ –æ—à–∏–±–∫–∞")
        dp.bot.send_message(admin_id, ex.args)
    except Exception as ex:
        print(get_current_time(), "[–û–®–ò–ë–ö–ê] {show_costume}", f"({cbq.from_user.mention})", ex)


@dp.callback_query_handler(lambda c: c.data.startswith("show_costume_photo_id"))
async def show_costume_photo(cbq: CallbackQuery):

    if dict_show_costume_mediagroup.get(cbq.from_user.id) is not None:
        for id_img in dict_show_costume_mediagroup[cbq.from_user.id]:
            try:
                await bot.delete_message(cbq.from_user.id, id_img)
            except aiogram.exceptions.MessageToDeleteNotFound:
                pass
        dict_show_costume_mediagroup[cbq.from_user.id] = []

    if cbq.data[len("show_costume_photo_id"):].isdigit():
        cbq.data = f"show_costume_id{int(cbq.data[len('show_costume_photo_id'):])}"
    else:
        # !!! –ù–∞–ø–∏—à–∏ –ø–æ—Ç–æ–º –Ω–æ—Ä–º –∑–∞–≥–ª—É—à–∫—É
        return
    await show_costume(cbq, all_photo=True)


# ======================================================================================================================

# –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –í–≤–æ–¥–µ –ù–∞–∑–≤–∞–Ω–∏—è –ö–æ—Å—Ç—é–º–∞
@dp.callback_query_handler(lambda c: c.data.startswith("newCostume_setName_collectionID"))
async def newCostume(cbq: CallbackQuery):
    if not sqlite_utils.its_moder(cbq.from_user.id):
        loader.bot.answer_callback_query(cbq.id, text="‚õîÔ∏è –û—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ", show_alert=True)
        return

    id_collection = -1

    if cbq.data.split("newCostume_setName_collectionID")[1].isdigit():
        id_collection = int(cbq.data.split("newCostume_setName_collectionID")[1])

    if sqlite_utils.get_name_collection(id_collection) is None and id_collection != 0:
        loader.bot.answer_callback_query(cbq.id, text="‚õîÔ∏è –ö–æ–ª–ª–µ–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ë–∞–∑–µ –î–∞–Ω–Ω—ã—Ö")
        return

    dict_create_costume[cbq.from_user.id] = {
        "id_collection": id_collection
    }

    await cbq.message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ—Å—Ç—é–º–∞")
    sqlite_utils.set_state(cbq.from_user.id, "newCostume_setName")


# –í–≤–æ–¥ –ù–∞–∑–≤–∞–Ω–∏—è –ö–æ—Å—Ç—é–º–∞ ->
# –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –≤–≤–æ–¥–µ –û–ø–∏—Å–∞–Ω–∏—è –ö–æ—Å—Ç—é–º–∞
@dp.message_handler(lambda m: sqlite_utils.get_state(m.from_user.id) == "newCostume_setName")
async def newCostume_1_setName(msg: Message):
    id_user = msg.from_user.id

    # –†–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
    if not sqlite_utils.its_moder(id_user):
        await msg.answer("‚õîÔ∏è –û—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ")
        return

    if dict_create_costume.get(id_user) is None:
        await msg.answer("‚õîÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è (701123X), –≤–≤–µ–¥–∏—Ç–µ /start –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–∞ üôè")
        return

    if dict_create_costume[id_user].get("id_collection") is None:
        await msg.answer("‚õîÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è (892W3467), –≤–≤–µ–¥–∏—Ç–µ /start –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–∞ üôè")
        return

    id_collection = dict_create_costume[id_user]["id_collection"]

    if sqlite_utils.get_name_collection(id_collection) is None and id_collection != 0:
        await msg.answer("‚õîÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è (78123D), –≤–≤–µ–¥–∏—Ç–µ /start –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–∞ üôè")
        return

    if len(msg.text.encode("utf-8")) > 64:
        await msg.answer("‚õîÔ∏è –î–ª–∏–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ—Å—Ç—é–º–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ")
        return

    if not sqlite_utils.unique_costume_name(msg.text):
        await msg.answer("‚õîÔ∏è –¢–∞–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ—Å—Ç—é–º–∞ —É–∂–µ –µ—Å—Ç—å")
        return

    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –ø–∞–º—è—Ç—å –∏–Ω—Ñ–æ—Ä–º—Ü–∏—é –æ –∫–æ—Å—Ç—é–º–µ
    dict_create_costume[id_user]["name"] = msg.text

    await msg.answer("‚úÖ <b>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ—Å—Ç—é–º–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!</b>", parse_mode="HTML")

    text_hint = """<b>–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ—Å—Ç—é–º–∞</b>
–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä <i>–∫—É—Ä—Å–∏–≤–Ω—ã–π —à—Ä–∏—Ñ—Ç</i> –∏ —ç–º–æ–¥–∑–∏ ü§°
<b><a href="https://lifehacker.ru/formatirovanie-teksta-v-telegram/">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é —Ç–µ–∫—Å—Ç–∞</a></b>
    """
    await msg.answer(text_hint, parse_mode="HTML", disable_web_page_preview=True)

    sqlite_utils.set_state(msg.from_user.id, "newCostume_setDescription")


# –í–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏—è
# –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è—Ö –ö–æ—Å—Ç—é–º–∞ (–ú–µ–¥–∏–∞–≥—Ä—É–ø–ø–µ)
@dp.message_handler(lambda m: sqlite_utils.get_state(m.from_user.id) == "newCostume_setDescription")
async def newCostume_setDescription(msg: Message):
    id_user = msg.from_user.id

    # –†–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
    if not sqlite_utils.its_moder(id_user):
        await msg.answer("‚õîÔ∏è –û—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ (128679), –≤–≤–µ–¥–∏—Ç–µ /start –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–∞ üôè")
        return

    if dict_create_costume.get(id_user) is None:
        await msg.answer("‚õîÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è (1q2798), –≤–≤–µ–¥–∏—Ç–µ /start –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–∞ üôè")

    id_collection = dict_create_costume[id_user].get("id_collection")

    if id_collection is None:
        await msg.answer("‚õîÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ (216873), –≤–≤–µ–¥–∏—Ç–µ /start –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–∞ üôè")

    if sqlite_utils.get_state(id_user)[:31].isdigit():
        id_collection = int(sqlite_utils.get_state(msg.from_user.id)[:31])

    if sqlite_utils.get_name_collection(id_collection) is None and id_collection != 0:
        await msg.answer("‚õîÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ (1276812), –≤–≤–µ–¥–∏—Ç–µ /start –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–∞ üôè")
        return

    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –ø–∞–º—è—Ç—å –∏–Ω—Ñ–æ—Ä–º—Ü–∏—é –æ –∫–æ—Å—Ç—é–º–µ
    dict_create_costume[id_user]["description"] = msg.parse_entities()

    await msg.answer("‚úÖ <b>–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ—Å—Ç—é–º–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!</b>", parse_mode="HTML")

    text_hint = """<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∫–æ—Å—Ç—é–º–∞</b>
    
<b>–í–∞–∂–Ω–æ!</b>
–ü–µ—Ä–≤–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —Å—Ç–∞–Ω–µ—Ç —Ç–∏—Ç—É–ª—å–Ω–æ–π."""

    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton("‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ñ–æ—Ç–æ", callback_data="newCostume_skipPhoto"))

    await msg.answer(text_hint, parse_mode="HTML", reply_markup=kb)

    dict_create_costume[id_user]["arr_photo"] = []
    dict_create_costume[id_user]["favorit_photo"] = None

    sqlite_utils.set_state(msg.from_user.id, "newCostume_setPhoto")


# –í–≤–æ–¥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
@dp.message_handler(lambda m: sqlite_utils.get_state(m.from_user.id) == "newCostume_setPhoto", content_types='photo')
async def newCostume_setPhoto(msg: Message):
    user_id = msg.from_user.id

    if len(dict_create_costume[user_id]["arr_photo"]) == 10:
        await msg.answer("‚õîÔ∏è –£ –∫–æ—Å—Ç—é–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 10 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π")
        return

    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton("üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π", callback_data="newCostume_finish"))

    photo_id = msg.photo.pop().file_id
    await msg.delete()
    photo_message = await msg.answer_photo(photo_id, reply_markup=kb, caption="‚úÖ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")
    photo_message_id = photo_message.message_id

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ –∫–æ—Å—Ç—é–º–æ–≤ –≤ –ë–î
    dict_create_costume[user_id]["arr_photo"].append((photo_id, photo_message_id))

    if dict_create_costume[user_id].get("favorit_photo") is None:
        dict_create_costume[user_id]["favorit_photo"] = (photo_id, photo_message_id)

    len_arr_photo = len(dict_create_costume[user_id]["arr_photo"])

    if len_arr_photo > 1:
        temp_message = Message()
        temp_message.message_id = dict_create_costume[user_id]["arr_photo"][len_arr_photo - 2][1]
        temp_message.chat = photo_message.chat
        await temp_message.delete_reply_markup()


# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î
@dp.callback_query_handler(lambda c: c.data == "newCostume_finish")
async def newCostume_finish(cbq: CallbackQuery):
    id_user = cbq.from_user.id

    costume_data = dict_create_costume[id_user]
    dict_create_costume[id_user] = None

    if not sqlite_utils.its_moder(id_user):
        loader.bot.answer_callback_query(cbq.id, text="‚õîÔ∏è –û—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ (155). –ü—Ä–æ–ø–∏—à–∏—Ç–µ /start", show_alert=True)

    # [–í–æ—Ç —Å—é–¥–∞ –±—ã –ø—Ä–æ–≤–µ—Ä–æ—á–µ–∫ –ø–æ–Ω–∞—Ç—ã–∫–∞—Ç—å]

    arr_photo = costume_data["arr_photo"]
    str_arr_photo = ""
    if len(arr_photo):
        arr_photo.remove(costume_data["favorit_photo"])
        arr_photo = [costume_data["favorit_photo"]] + arr_photo
        for photo in arr_photo:
            str_arr_photo += '"' + str(photo[0]) + '",'
        str_arr_photo = str_arr_photo[:-1]
    str_arr_photo = '[' + str_arr_photo + ']'

    id_costume = sqlite_utils.set_costume(
        costume_data["name"],
        costume_data["description"],
        str_arr_photo,
        costume_data["id_collection"]
    )

    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é", callback_data="back_menu"))
    kb.add(InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –∫–æ—Å—Ç—é–º", callback_data=f"show_costume_id{id_costume}"))
    kb.add(InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é", callback_data=f"show_collection_id{id_costume}"))
    await cbq.message.answer(f"‚úÖ –ö–æ—Å—Ç—é–º {costume_data['name']} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!", "HTML", reply_markup=kb)

    sqlite_utils.set_state(id_user, "newCostume_finish")


# –ü—Ä–æ–ø—É—Å–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
@dp.callback_query_handler(lambda c: c.data == "newCostume_skipPhoto")
async def newCostume_skipPhoto(cbq: CallbackQuery):
    if len(dict_create_costume[cbq.from_user.id]["arr_photo"]):
        await cbq.answer("–í—ã —É–∂–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π¬ª")
    else:
        await newCostume_finish(cbq)